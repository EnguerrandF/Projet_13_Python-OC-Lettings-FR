version: 2.1

orbs:
  python: circleci/python@1.5.0
  aws-cli: circleci/aws-cli@3.1
  aws-ecs: circleci/aws-ecs@4.0
  aws-ecr: circleci/aws-ecr@9.0.0
  #aws-code-deploy: circleci/aws-code-deploy@3.0

jobs:
  test-app:
    executor: python/default
    steps:
      - checkout
      - python/install-packages:
          pip-dependency-file: requirements.txt
          pkg-manager: pip
      - run:
          name: Run tests pytest
          command: pytest
      - run:
          name: Run Flake8
          command: flake8

  # build-docker:
  #   docker:
  #     - image: circleci/python:3.8
  #   steps:
  #     - checkout
  #     - setup_remote_docker:
  #         version: 20.10.14
  #     - run:
  #         name: Build Docker image
  #         command: docker build -t $USER_NAME_DOCKER/projet_13_python-oc-lettings-fr:$CIRCLE_SHA1 .
  #     - run:
  #         name: Push DockerHub
  #         command: |
  #             echo $TOKEN_DOCKER | docker login --username $USER_NAME_DOCKER --password-stdin
  #             docker tag $USER_NAME_DOCKER/projet_13_python-oc-lettings-fr:$CIRCLE_SHA1 $USER_NAME_DOCKER/projet_13_python-oc-lettings-fr:latest
  #             docker push $USER_NAME_DOCKER/projet_13_python-oc-lettings-fr:$CIRCLE_SHA1
  #             docker push $USER_NAME_DOCKER/projet_13_python-oc-lettings-fr:latest

  build-and-push-aws-ecr:
    docker:
      - image: cimg/base:stable
    steps:
      - checkout
      - setup_remote_docker:
          version: 20.10.14
      - aws-cli/setup:
          aws-access-key-id: AWS_ACCESS_KEY_ID
          aws-secret-access-key: AWS_SECRET_ACCESS_KEY
      - run:
          name: Build Docker image
          command: docker build -t public.ecr.aws/k4x1n9q9/projet_13_python-oc-lettings-fr:$CIRCLE_SHA1 .
      - run:
          name: Connection docker to AWS ECR
          command: |
              aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws/k4x1n9q9
      - run:
          name: Push AWS ECR
          command: |
              docker tag public.ecr.aws/k4x1n9q9/projet_13_python-oc-lettings-fr:$CIRCLE_SHA1 public.ecr.aws/k4x1n9q9/projet_13_python-oc-lettings-fr:latest
              docker push public.ecr.aws/k4x1n9q9/projet_13_python-oc-lettings-fr:latest
              docker push public.ecr.aws/k4x1n9q9/projet_13_python-oc-lettings-fr:$CIRCLE_SHA1

  deploy_application_aws:
    docker:
      - image: cimg/base:stable
    steps:
      - checkout
      - aws-cli/setup:
          aws-access-key-id: AWS_ACCESS_KEY_ID
          aws-secret-access-key: AWS_SECRET_ACCESS_KEY
      - aws-ecs/run_task:
          awsvpc: false
          subnet_ids: vpc-04b3fac2ac183395f
          cluster: Projet_13
          launch_type: FARGATE
          task_definition: Tache_Projet_13
      

workflows:
  sample:
    jobs:
      - test-app
      - build-and-push-aws-ecr:
          requires:
            - test-app
      - deploy_application_aws:
            requires:
              - build-and-push-aws-ecr